name: Linting

on:
  push:
    branches:
      - master
      - development
  pull_request:

jobs:
  pre-commit:
    name: Pre-commit
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          sudo apt install ffmpeg -y
          pip install -r scripts/requirements.dev.txt

      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure --color=always

      - name: Test with pytest
        run: |
          pytest -v

  docker:
    needs: pre-commit
    runs-on: ubuntu-22.04
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: lefskiy/moonraker-telegram-bot
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      -
        name: Docker meta
        id: meta_mjpeg
        uses: docker/metadata-action@v5.5.1
        with:
          images: lefskiy/moonraker-telegram-bot
          flavor: |
            prefix=mjpeg-,onlatest=true
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=sha-mjpeg-
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6.7.0
        with:
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
      -
        name: Build and push mjpeg
        uses: docker/build-push-action@v6.7.0
        with:
          file: Dockerfile-mjpeg
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_mjpeg.outputs.tags }}
          labels: ${{ steps.meta_mjpeg.outputs.labels }}
          platforms: linux/amd64,linux/arm64
